{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "Neural Network Graph Schema",
  "type": "object",
  "properties": {
    "name": {
      "type": "string",
      "description": "Name of the graph"
    },
    "nodes": {
      "type": "array",
      "items": {
        "type": "object",
        "required": ["name", "type", "params"],
        "properties": {
          "name": {
            "type": "string",
            "description": "Unique identifier for the node"
          },
          "type": {
            "type": "string",
            "enum": ["conv1d", "conv2d", "conv3d", "elementwise_nonlinearity", "nonlinearity1d", "linear", "flatten", "maxpool1d", "maxpool2d", "maxpool3d", "avgpool1d", "avgpool2d", "avgpool3d", "lppool1d", "lppool2d", "lppool3d", "adaptivemaxpool1d", "adaptivemaxpool2d", "adaptivemaxpool3d", "adaptiveavgpool1d", "adaptiveavgpool2d", "adaptiveavgpool3d"],
            "description": "Type of the neural network layer"
          },
          "params": {
            "type": "object",
            "oneOf": [
              {
                "if": { "properties": { "type": { "const": "conv1d" } } },
                "then": {
                  "required": ["batch_size", "in_channels", "out_channels", "input_size", "kernel_size"],
                  "properties": {
                    "batch_size": { "type": "integer", "minimum": 1 },
                    "in_channels": { "type": "integer", "minimum": 1 },
                    "out_channels": { "type": "integer", "minimum": 1 },
                    "input_size": { "type": "integer", "minimum": 1 },
                    "kernel_size": { "type": "integer", "minimum": 1 },
                    "stride": { "type": "integer", "minimum": 1, "default": 1 },
                    "padding": { "type": "integer", "minimum": 0, "default": 0 }
                  }
                }
              },
              {
                "if": { "properties": { "type": { "const": "conv2d" } } },
                "then": {
                  "required": ["batch_size", "in_channels", "out_channels", "input_size", "kernel_size"],
                  "properties": {
                    "batch_size": { "type": "integer", "minimum": 1 },
                    "in_channels": { "type": "integer", "minimum": 1 },
                    "out_channels": { "type": "integer", "minimum": 1 },
                    "input_size": {
                      "type": "array",
                      "items": { "type": "integer", "minimum": 1 },
                      "minItems": 2,
                      "maxItems": 2
                    },
                    "kernel_size": { 
                      "oneOf": [
                        { "type": "integer", "minimum": 1 },
                        {
                          "type": "array",
                          "items": { "type": "integer", "minimum": 1 },
                          "minItems": 2,
                          "maxItems": 2
                        }
                      ]
                    },
                    "stride": {
                      "oneOf": [
                        { "type": "integer", "minimum": 1 },
                        {
                          "type": "array",
                          "items": { "type": "integer", "minimum": 1 },
                          "minItems": 2,
                          "maxItems": 2
                        }
                      ],
                      "default": 1
                    },
                    "padding": {
                      "oneOf": [
                        { "type": "integer", "minimum": 0 },
                        {
                          "type": "array",
                          "items": { "type": "integer", "minimum": 0 },
                          "minItems": 2,
                          "maxItems": 2
                        }
                      ],
                      "default": 0
                    }
                  }
                }
              },
              {
                "if": { "properties": { "type": { "const": "elementwise_nonlinearity" } } },
                "then": {
                  "required": ["dim", "nonlinearity"],
                  "properties": {
                    "dim": {
                      "type": "array",
                      "items": { "type": "integer", "minimum": 1 }
                    },
                    "nonlinearity": {
                      "type": "string",
                      "enum": ["ReLU", "Sigmoid", "Tanh", "LeakyReLU", "ELU", "SELU", "CELU", "GELU", "Softplus", "Softsign", "Hardtanh", "Hardshrink", "Hardsigmoid", "Hardswish", "Softshrink", "Tanhshrink", "Threshold", "ReLU6", "SiLU", "Mish"]
                    }
                  }
                }
              },
              {
                "if": { "properties": { "type": { "const": "linear" } } },
                "then": {
                  "required": ["batch_size", "input_features", "output_features"],
                  "properties": {
                    "batch_size": { "type": "integer", "minimum": 1 },
                    "input_features": { "type": "integer", "minimum": 1 },
                    "output_features": { "type": "integer", "minimum": 1 }
                  }
                }
              },
              {
                "if": { "properties": { "type": { "const": "flatten" } } },
                "then": {
                  "required": ["dim"],
                  "properties": {
                    "dim": {
                      "type": "array",
                      "items": { "type": "integer", "minimum": 1 }
                    },
                    "start_dim": { "type": "integer", "minimum": 0, "default": 1 },
                    "end_dim": { "type": "integer", "default": -1 }
                  }
                }
              }
            ]
          },
          "input_nodes": {
            "type": "array",
            "items": { "type": "string" },
            "description": "Names of nodes that feed into this node"
          }
        }
      }
    }
  },
  "required": ["name", "nodes"]
} 